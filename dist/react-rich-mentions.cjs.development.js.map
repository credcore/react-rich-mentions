{"version":3,"file":"react-rich-mentions.cjs.development.js","sources":["../src/utils/noop.ts","../src/RichMentionsContext.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/RichMentionsInput.tsx","../src/utils/nodeToHtmlElement.ts","../src/utils/getFragment.ts","../src/utils/setCursorPosition.ts","../src/utils/escapeFragmentWithValue.ts","../src/utils/fixCursorInsertion.ts","../src/utils/deleteSelection.ts","../src/utils/transformFinalFragment.ts","../src/utils/removeBrokenFragments.ts","../src/utils/insertFragment.ts","../src/utils/getTransformedValue.ts","../src/utils/handleFragmentEscape.ts","../src/utils/handleFragmentCreation.ts","../src/utils/handleFragmentDeletion.ts","../src/utils/getConfigsInitialValue.ts","../src/RichMentionsProvider.tsx","../src/RichMentionsAutocomplete.tsx"],"sourcesContent":["export const noop = () => {};\n","import { createContext } from 'react';\nimport { noop } from './utils/noop';\n\nexport type TMentionItem<T = object> = T & {\n  name: string;\n  ref: string;\n};\n\nexport interface TMentionConfig<T = object> {\n  query: RegExp;\n  match: RegExp;\n  matchDisplay: string;\n  customizeFragment?: (fragment: HTMLSpanElement, final: boolean) => void;\n  onMention: (\n    text: string,\n    callback?: (results: TMentionItem<T>[]) => void\n  ) => void | TMentionItem<T>[] | Promise<TMentionItem<T>[]>;\n}\n\nexport interface TMentionContext {\n  getTransformedValue: () => string;\n  setValue: (text: string) => void;\n  insertFragment: (ref: string, element?: HTMLElement) => void;\n  activeSearch: string;\n  inputElement: HTMLDivElement | null;\n  setInputElement: (newInputElement: HTMLDivElement | null) => void;\n  selectItem: (item: TMentionItem<any>) => void;\n  setActiveItemIndex: (index: number) => void;\n  opened: null | {\n    config: TMentionConfig<any>;\n    element: HTMLSpanElement;\n    fixed: boolean;\n    bottom: boolean;\n    right: boolean;\n    x: number;\n    y: number;\n  };\n  index: number;\n  loading: boolean;\n  results: TMentionItem<any>[];\n  closeAutocomplete: () => void;\n  openAutocomplete: <T>(\n    node: HTMLElement,\n    value: string,\n    config: TMentionConfig<T>\n  ) => void;\n  onBeforeChanges: (event: React.FormEvent<HTMLDivElement>) => void;\n  onKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  onChanges: (event: React.FormEvent<HTMLDivElement>) => void;\n  getInitialHTML?: (value: string) => string;\n  fixed: boolean;\n  setPositionFixed: (fixed: boolean) => void;\n}\n\nexport const initialContext: TMentionContext = {\n  getTransformedValue: () => '',\n  insertFragment: noop,\n  setValue: noop,\n  activeSearch: '',\n  inputElement: null,\n  setInputElement: noop,\n  selectItem: noop,\n  setActiveItemIndex: noop,\n  opened: null,\n  index: 0,\n  loading: false,\n  results: [],\n  closeAutocomplete: noop,\n  openAutocomplete: noop,\n  onBeforeChanges: noop,\n  onKeyDown: noop,\n  onChanges: noop,\n  fixed: true,\n  setPositionFixed: noop,\n};\n\nexport const RichMentionsContext = createContext<TMentionContext>(\n  initialContext\n);\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { HTMLProps, useRef, useContext, useState } from 'react';\nimport { RichMentionsContext } from './RichMentionsContext';\n\nimport styles from './RichMentions.module.css';\n\ninterface TProps extends HTMLProps<HTMLDivElement> {\n  defaultValue?: string;\n  singleLine?: Boolean;\n  placeholder?: string;\n  className?: string;\n  onEnter?: () => void;\n}\n\nexport function RichMentionsInput({\n  defaultValue,\n  singleLine,\n  placeholder,\n  className,\n  onEnter,\n  ...divAttributes\n}: TProps) {\n  const ref = useRef<string | null>(null);\n\n  const {\n    setInputElement,\n    onBeforeChanges,\n    onKeyDown,\n    onChanges,\n    getInitialHTML,\n    opened,\n    getTransformedValue,\n  } = useContext(RichMentionsContext);\n  const [isEmpty, setEmpty] = useState(getTransformedValue() ? false : true);\n\n  if (ref.current === null && getInitialHTML) {\n    ref.current = getInitialHTML(defaultValue ? defaultValue : '');\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // @ts-ignore\n    divAttributes['data-cy'] = 'input';\n  }\n\n  const mergeOnKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === 'Enter') {\n      if (onEnter && !opened) {\n        //Because the updates, has to be applied for the event to get the correct value\n        //TODO: Better handling\n        setTimeout(() => {\n          onEnter();\n        }, 200);\n      }\n\n      if (singleLine) {\n        event.preventDefault();\n      }\n    }\n    onKeyDown(event);\n\n    if (divAttributes.onKeyDown) {\n      divAttributes.onKeyDown(event);\n    }\n  };\n\n  const onInput = (event: React.FormEvent<HTMLDivElement>) => {\n    if (divAttributes.onInput) {\n      divAttributes.onInput(event);\n    }\n    onChanges(event);\n    setEmpty(getTransformedValue() ? false : true);\n  };\n\n  const onBeforeInput = (event: React.FormEvent<HTMLDivElement>) => {\n    onBeforeChanges(event);\n\n    if (divAttributes.onBeforeInput) {\n      divAttributes.onBeforeInput(event);\n    }\n  };\n\n  let style = {};\n  if (singleLine) {\n    style = { whiteSpace: 'nowrap', overflow: 'hidden' };\n  }\n\n  return (\n    <div\n      ref={setInputElement}\n      {...divAttributes}\n      className={`${styles.xinput} ${\n        isEmpty ? styles.xempty : ''\n      } ${className}`}\n      contentEditable={true}\n      onBeforeInput={onBeforeInput}\n      onKeyDown={mergeOnKeyDown}\n      onInput={onInput}\n      data-ph={placeholder}\n      dangerouslySetInnerHTML={{ __html: ref.current || '' }}\n      style={style}\n    ></div>\n  );\n}\n","export function nodeToHtmlElement(node: Node): HTMLElement | null {\n  return node.nodeType === Node.TEXT_NODE\n    ? node.parentElement\n    : (node as HTMLElement);\n}\n","import { nodeToHtmlElement } from './nodeToHtmlElement';\n\nexport function getFragment(node: Node): HTMLElement | null {\n  const element = nodeToHtmlElement(node);\n  return element && element.hasAttribute('data-rich-mentions') ? element : null;\n}\n","export function setCursorPosition(\n  element: HTMLElement | Node | Text,\n  position: number\n): void {\n  const selection = document.getSelection();\n  const range = document.createRange();\n\n  range.setStart(element, position);\n  range.collapse(true);\n\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n","import { setCursorPosition } from './setCursorPosition';\n\nexport function escapeFragmentWithValue(\n  element: HTMLElement,\n  text: string,\n  position: 'after' | 'before' = 'after'\n) {\n  const textNode = document.createTextNode(text.replace(/\\s/g, '\\u00A0'));\n  const parent = element.parentElement;\n\n  if (parent) {\n    if (position === 'after') {\n      parent.insertBefore(textNode, element.nextSibling);\n    } else {\n      parent.insertBefore(textNode, element);\n    }\n    setCursorPosition(textNode, text.length);\n  }\n}\n","import { nodeToHtmlElement } from './nodeToHtmlElement';\nimport { escapeFragmentWithValue } from './escapeFragmentWithValue';\n\nexport function fixCursorInsertion(\n  event: React.FormEvent<HTMLDivElement>,\n  selection: Selection\n): void {\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // @ts-ignore\n  const insertion: string = event.data;\n  const container = event.currentTarget;\n\n  for (let i = 0; i < selection.rangeCount; i++) {\n    const range = selection.getRangeAt(i);\n\n    // Same element\n    if (range.startContainer === range.endContainer) {\n      const element = nodeToHtmlElement(range.startContainer);\n\n      if (!container.contains(element)) {\n        continue;\n      }\n\n      // If outside pending fragment, insert char inside\n      if (range.startContainer instanceof Text && range.startOffset === 0) {\n        const previousChild = range.startContainer.previousSibling;\n        const previousElement = range.startContainer.previousElementSibling;\n        if (\n          previousChild &&\n          previousElement &&\n          previousChild === previousElement &&\n          previousElement.hasAttribute('data-rich-mentions') &&\n          !previousElement.hasAttribute('data-integrity')\n        ) {\n          previousElement.appendChild(document.createTextNode(insertion));\n          event.preventDefault();\n          continue;\n        }\n      }\n\n      // TODO range.endContainer\n      if (\n        !element ||\n        container === element ||\n        !element.hasAttribute('data-rich-mentions')\n      ) {\n        continue;\n      }\n\n      // At first position of fragment, move before it\n      if (range.endOffset === 0) {\n        escapeFragmentWithValue(element, insertion, 'before');\n        event.preventDefault();\n        continue;\n      }\n\n      const isFinal = element.hasAttribute('data-integrity');\n      const text = element.textContent || '';\n\n      // Move outside final fragment\n      if (isFinal && range.startOffset === text.length) {\n        escapeFragmentWithValue(element, insertion, 'after');\n        event.preventDefault();\n        continue;\n      }\n    }\n  }\n}\n","import { setCursorPosition } from './setCursorPosition';\n\nexport function deleteSelection(\n  selection: Selection,\n  event?: React.FormEvent<HTMLDivElement>\n): boolean {\n  let deleted = false;\n  let lastDeletedRange = null;\n\n  for (let i = 0; i < selection.rangeCount; ++i) {\n    const range = selection.getRangeAt(i);\n\n    if (\n      range.startContainer !== range.endContainer ||\n      range.startOffset !== range.endOffset\n    ) {\n      deleted = true;\n      lastDeletedRange = range;\n      range.deleteContents();\n    }\n  }\n\n  // @ts-ignore\n  if (event?.data && lastDeletedRange) {\n    // @ts-ignore\n    const textNode = document.createTextNode(event.data);\n    lastDeletedRange.insertNode(textNode);\n    setCursorPosition(textNode, 1);\n    event.preventDefault();\n  }\n\n  return deleted;\n}\n","import { TMentionConfig, TMentionItem } from '../RichMentionsContext';\nimport { setCursorPosition } from './setCursorPosition';\n\nexport function transformFinalFragment<T>(\n  span: HTMLSpanElement,\n  ref: TMentionItem['ref'],\n  config: TMentionConfig<T>\n): void {\n  const content = ref\n    .replace(config.match, config.matchDisplay)\n    .replace(/\\s/g, '\\u00A0');\n\n  span.textContent = content;\n  span.setAttribute('data-rich-mentions', ref);\n  span.setAttribute('spellcheck', 'false');\n\n  if (process.env.NODE_ENV !== 'production') {\n    span.setAttribute('data-cy', 'final');\n  }\n\n  if (config.customizeFragment) {\n    config.customizeFragment(span, true);\n  }\n\n  span.setAttribute('data-integrity', span.innerHTML);\n\n  if (span.parentElement) {\n    // TODO only if no space after\n    const textNode = document.createTextNode('\\u00A0');\n    span.parentElement.insertBefore(textNode, span.nextSibling);\n    setCursorPosition(textNode, 1);\n  }\n}\n","import { TMentionConfig } from '../RichMentionsContext';\n\nexport function removeBrokenFragments<T>(\n  inputElement: HTMLDivElement,\n  configs: TMentionConfig<T>[]\n) {\n  Array.from(inputElement.children).forEach(function fixBrokenElement(\n    element,\n    index\n  ) {\n    const parent = element.parentElement as HTMLElement;\n\n    // Replace BR with div>br\n    // There is a bug on chrome occuring when the cursor is just after a br, the selection is broken and\n    // we can't locate its position. By moving them inside a div it fixes the problem\n    if (element instanceof HTMLBRElement) {\n      if (\n        parent.children.length !== 1 &&\n        index !== parent.children.length - 1\n      ) {\n        const div = document.createElement('div');\n        parent.insertBefore(div, element);\n        div.appendChild(element);\n      }\n      return;\n    }\n\n    if (element instanceof HTMLDivElement && !element.attributes.length) {\n      Array.from(element.children).forEach(fixBrokenElement);\n      return;\n    }\n\n    const text = element.textContent || '';\n\n    // Fixes a Chrome bug:\n    // - Add a span with color on a contenteditable.\n    // - Remove the span with backspace.\n    // - Type text.\n    // Chrome will try to restore the style by adding a <font> with specific styles.\n    if (\n      !(element instanceof Text) &&\n      !element.hasAttribute('data-rich-mentions')\n    ) {\n      parent.insertBefore(document.createTextNode(text), element);\n      parent.removeChild(element);\n      return;\n    }\n\n    // On final fragments, avoid edition.\n    // The data-integrity attribute contains the original fragment content.\n    // If it does not match, just remove the entire fragment.\n    if (element.hasAttribute('data-integrity')) {\n      // final fragment, if not valid remove it completely\n      if (element.getAttribute('data-integrity') !== element.innerHTML) {\n        parent.removeChild(element);\n      }\n      return;\n    }\n\n    // If we have a pending fragment that is now invalid since the last (let\n    // say you just removed the '@' from it, then we can safely extract the\n    // text, remove the fragment, and insert the text back without it.\n    const isValid = configs.some(cfg => text.match(cfg.query));\n    if (!isValid) {\n      parent.insertBefore(document.createTextNode(text), element.nextSibling);\n      parent.removeChild(element);\n    }\n  });\n}\n","import { getFragment } from './getFragment';\nimport { deleteSelection } from './deleteSelection';\nimport { setCursorPosition } from './setCursorPosition';\nimport { transformFinalFragment } from './transformFinalFragment';\nimport { TMentionConfig } from '../RichMentionsContext';\nimport { removeBrokenFragments } from './removeBrokenFragments';\n\nconst isSpace = (char: string) => /(\\u00A0|\\s)/.test(char);\n\nconst needSpaceBefore = (\n  text: string,\n  offset: number,\n  node: Node,\n  defaultValue: boolean\n): boolean => {\n  if (offset > 0) {\n    return !isSpace(text.charAt(offset - 1));\n  }\n\n  // Do not add space if the previous element is a block adding a line break\n  if (['DIV', 'BR'].includes(node.nodeName)) {\n    return false;\n  }\n\n  if (node.previousSibling) {\n    // TODO get first previous element with text\n    const prevText = node.previousSibling.textContent || '';\n    return !!prevText.length && !isSpace(prevText.charAt(prevText.length - 1));\n  }\n\n  return defaultValue;\n};\n\nconst needSpaceAfter = (text: string, offset: number, node: Node): boolean => {\n  if (offset < text.length) {\n    return !isSpace(text.charAt(text.length - 1));\n  }\n\n  if (!node.nextSibling) {\n    return true;\n  }\n\n  const nextText = node.nextSibling.textContent || '';\n  // TODO get first next fragment with content...\n  return !nextText.length || !isSpace(nextText.charAt(0));\n};\n\nexport function insertFragment<T>(\n  ref: string,\n  customFragment: HTMLElement | null,\n  configs: TMentionConfig<T>[],\n  inputElement: HTMLDivElement | null\n) {\n  const config = configs.find(cfg => ref.match(cfg.match));\n\n  // inputElement was removed from DOM for some reasons\n  if (!inputElement || (!config && !customFragment)) {\n    return;\n  }\n\n  let insertAfterNode: Node | null = null;\n  let insertBeforeNode: Node | null = null;\n  let addSpaceBefore = false;\n  let addSpaceAfter = false;\n\n  const selection = document.getSelection();\n\n  // Is selection inside inputElement ?\n  // (avoid inserting fragments on other parts of the website)\n  if (\n    selection &&\n    selection.anchorNode &&\n    inputElement.contains(selection.anchorNode)\n  ) {\n    let { anchorNode: node, anchorOffset: offset } = selection;\n    let fragment = getFragment(node);\n\n    // Avoid problem with text selection\n    // Just delete it before processing\n    deleteSelection(selection);\n\n    // If we are at the fragment end when inserting content, we have to\n    // change the cursor position to be at first position on the next one.\n    // If the next fragment does not exist, add a new one.\n    // <span>\"text\"|<span>   -> <span>\"text\"</span>\"|\"\n    if (fragment && offset === (node.textContent || '').length) {\n      if (!fragment.nextSibling) {\n        inputElement.insertBefore(document.createTextNode(''), null);\n      }\n      node = fragment.nextSibling as Node;\n      offset = 0;\n      fragment = null;\n    }\n\n    if (fragment) {\n      // Final fragment can't be edited\n      // Just remove it and add the insertion just after.\n      if (fragment.hasAttribute('data-integrity')) {\n        insertBeforeNode = fragment.nextSibling;\n        fragment.parentElement?.removeChild(fragment);\n      } else {\n        const text = node.textContent || '';\n\n        // In this case, we are in the middle of a pending fragment.\n        // <span>@vin|ce</span> -> <span>@vin</span>\" [insertion] \"ce\"\n        if (offset > 0 && offset < text.length) {\n          const firstPart = text.substr(0, offset);\n          const secondPart = text.substr(offset);\n          const subFragment = document.createTextNode(secondPart);\n\n          inputElement.insertBefore(subFragment, fragment.nextSibling);\n          node.textContent = firstPart;\n          addSpaceBefore = true;\n          insertBeforeNode = subFragment;\n        }\n\n        addSpaceBefore = needSpaceBefore(text, offset, node, addSpaceBefore);\n        addSpaceAfter = needSpaceAfter(text, offset, node);\n      }\n    } else {\n      // Text inside the contenteditable (not nested)\n      let text = node.textContent || '';\n\n      // If we are at the first position in a fragment, we need to insert the new\n      // fragment before it, not after.\n      if (offset > 0) {\n        insertAfterNode = node;\n      } else {\n        // If next block is <div><br/></div> we have to replace it to a single <div></div>\n        const element = node as HTMLElement;\n        if (\n          !text &&\n          element.nodeName === 'DIV' &&\n          !element.attributes.length &&\n          element.childNodes.length === 1 &&\n          element.firstElementChild instanceof HTMLBRElement\n        ) {\n          if (element.previousSibling instanceof HTMLDivElement) {\n            insertBeforeNode = node;\n            element.removeChild(element.firstElementChild);\n          } else {\n            insertAfterNode = node;\n            element.removeChild(element.firstElementChild);\n          }\n        } else {\n          insertBeforeNode = node;\n        }\n      }\n\n      // In this case, we need to add the insertion at the center of a TextNode.\n      // Let say we have \"hello|world\", as you can't add span inside TextNode, we have\n      // to split it in two differents nodes : \"Hello\" and \"world\", and insert the span\n      // between them.\n      if (offset > 0 && offset < text.length) {\n        const firstPart = text.substr(0, offset);\n        const secondPart = text.substr(offset);\n\n        text = firstPart;\n        node.textContent = firstPart;\n\n        node.parentElement?.insertBefore(\n          document.createTextNode(secondPart),\n          node.nextSibling\n        );\n      }\n\n      addSpaceBefore = needSpaceBefore(text, offset, node, addSpaceBefore);\n      addSpaceAfter = needSpaceAfter(text, offset, node);\n    }\n  } else {\n    // Can't find the selection, let's just insert the fragment at the\n    // end of the div[contenteditable]\n    const text = inputElement.textContent || '';\n    addSpaceAfter = true;\n    addSpaceBefore = !isSpace(text.charAt(text.length - 1));\n  }\n\n  // Create fragment\n  const span = document.createElement('span');\n  if (config) {\n    transformFinalFragment(span, ref, config);\n  } else if (customFragment) {\n    span.appendChild(customFragment);\n    span.setAttribute('data-rich-mentions', ref);\n    span.setAttribute('data-integrity', span.innerHTML);\n    span.setAttribute('spellcheck', 'false');\n\n    if (process.env.NODE_ENV !== 'production') {\n      span.setAttribute('data-cy', 'final');\n    }\n  }\n\n  // Insert it at chosen position\n  if (insertAfterNode && insertAfterNode !== inputElement) {\n    insertAfterNode.parentElement?.insertBefore(\n      span,\n      insertAfterNode.nextSibling\n    );\n  } else if (insertBeforeNode && insertBeforeNode !== inputElement) {\n    insertBeforeNode.parentElement?.insertBefore(span, insertBeforeNode);\n  } else {\n    inputElement.appendChild(span);\n  }\n\n  // Insert space before if needed\n  if (addSpaceBefore) {\n    const space = document.createTextNode('\\u00A0');\n    span.parentElement?.insertBefore(space, span);\n  }\n\n  // Insert space after if needed\n  if (addSpaceAfter) {\n    const space = document.createTextNode('\\u00A0');\n    span.parentElement?.insertBefore(space, span.nextSibling);\n  }\n\n  // Set cursor position (always true)\n  if (span.nextSibling) {\n    setCursorPosition(span.nextSibling, addSpaceAfter ? 1 : 0);\n  }\n\n  // If the user is selecting text and some parts of fragment, we need to be sure to delete it correctly\n  // Ex where \"[\" and \"]\" are the start and ending of text selection:\n  // input: \"he[llo <span>@vin]ce</span>\"\n  // output: \"he @insertedfragment <span>ce</span>\"\n  // In this case, the fragment \"ce\" need to be deleted.\n  removeBrokenFragments<T>(inputElement, configs);\n}\n","import { TMentionContext } from '../RichMentionsContext';\n\nexport function getTransformedValue(\n  inputElement: TMentionContext['inputElement']\n): string {\n  if (!inputElement || inputElement.innerHTML === '<br>') {\n    return '';\n  }\n\n  const brCharacter = `_br_${Date.now()}_`;\n  const brMatcher = new RegExp(`\\\\n?${brCharacter}\\\\n?`, 'g');\n\n  return Array.from(inputElement.childNodes)\n    .map(el => getNodeContent(el, brCharacter))\n    .join('')\n    .replace(/\\u00A0/g, ' ') // Replace back insecable spaces\n    .replace(/\\n{2,}/g, '\\n') // Following lines are considered as one in HTML\n    .replace(brMatcher, '\\n') // Replace <br/> to line break\n    .trim();\n}\n\nfunction getNodeContent(element: Node, brCharacter: string): string {\n  if (element instanceof Text) {\n    return element.textContent || '';\n  }\n\n  if (element instanceof HTMLBRElement) {\n    return brCharacter;\n  }\n\n  if (element instanceof Element) {\n    const richValue = element.getAttribute('data-rich-mentions');\n    if (richValue) {\n      return richValue;\n    }\n\n    const char = element instanceof HTMLDivElement ? '\\n' : '';\n    const result = Array.from(element.childNodes)\n      .map(el => getNodeContent(el, brCharacter))\n      .join('');\n\n    return `${char}${result}${char}`;\n  }\n\n  return '';\n}\n","import { TMentionConfig } from '../RichMentionsContext';\nimport { getFragment } from './getFragment';\nimport { escapeFragmentWithValue } from './escapeFragmentWithValue';\n\nexport function handleFragmentEscape(\n  event: React.FormEvent<HTMLDivElement>,\n  { anchorNode }: Selection,\n  configs: TMentionConfig<any>[]\n) {\n  if (event.defaultPrevented || !anchorNode) {\n    return;\n  }\n\n  const element = getFragment(anchorNode);\n\n  if (element) {\n    // @ts-ignore\n    const insertion: string = event.data;\n    const newText = element.textContent + insertion;\n    const isValid = configs.some(cfg => {\n      const matches = newText.match(cfg.query);\n      return matches && matches[0] === matches.input;\n    });\n\n    if (!isValid) {\n      event.preventDefault();\n      escapeFragmentWithValue(element, insertion);\n    }\n  }\n}\n","import { TMentionConfig, TMentionContext } from '../RichMentionsContext';\nimport { setCursorPosition } from './setCursorPosition';\nimport { getFragment } from './getFragment';\n\nexport function handleFragmentCreation(\n  event: React.FormEvent<HTMLDivElement>,\n  selection: Selection,\n  configs: TMentionConfig<any>[],\n  ctx: TMentionContext\n): void {\n  const { anchorNode, anchorOffset } = selection;\n\n  if (event.defaultPrevented || !anchorNode || getFragment(anchorNode)) {\n    return;\n  }\n\n  // @ts-ignore Find a property type instead of React.FormEvent<HTMLDivElement> ?\n  const insertion: string = event.data;\n  const fragmentText = anchorNode.textContent || '';\n\n  // Build new text fragment with insertion\n  const text =\n    fragmentText.substr(0, anchorOffset) +\n    insertion +\n    fragmentText.substr(anchorOffset);\n\n  // No match\n  const config = configs.find(cfg => text.match(cfg.query));\n  if (!config) {\n    return;\n  }\n\n  const matches = text.match(config.query) as RegExpMatchArray;\n  const index = matches.index || 0;\n  const textBeforeQuery = text.substr(0, index);\n\n  // Do nothing if there is a valid character before.\n  // Do nothing if the range overflow the fragment position\n  if (\n    (textBeforeQuery.length && !/\\W$/.test(textBeforeQuery)) ||\n    anchorOffset < index ||\n    anchorOffset >= index + matches[0].length\n  ) {\n    return;\n  }\n\n  anchorNode.textContent = textBeforeQuery;\n\n  const fragment = document.createElement('span');\n  const textQuery = matches[0].substr(\n    0,\n    anchorOffset - index + insertion.length\n  );\n  const afterInsertion = text.substr(index + textQuery.length);\n\n  fragment.setAttribute('data-rich-mentions', '');\n  fragment.setAttribute('spellcheck', 'false');\n\n  if (process.env.NODE_ENV !== 'production') {\n    fragment.setAttribute('data-cy', 'pending');\n  }\n\n  fragment.textContent = textQuery;\n\n  if (config.customizeFragment) {\n    config.customizeFragment(fragment, false);\n  }\n\n  const after = document.createTextNode(\n    /^\\s/.test(afterInsertion) ? afterInsertion : ' ' + afterInsertion\n  );\n\n  const isContainer = event.currentTarget === anchorNode;\n  const parent = isContainer ? anchorNode : anchorNode.parentElement;\n\n  if (parent) {\n    if (isContainer) {\n      parent.appendChild(fragment);\n      parent.appendChild(after);\n    } else {\n      parent.insertBefore(after, anchorNode.nextSibling);\n      parent.insertBefore(fragment, anchorNode.nextSibling);\n    }\n  }\n\n  event.preventDefault();\n  setCursorPosition(\n    fragment.childNodes[0],\n    anchorOffset - textBeforeQuery.length + 1\n  );\n\n  ctx.openAutocomplete(fragment, textQuery, config);\n}\n","import { nodeToHtmlElement } from './nodeToHtmlElement';\n\nconst removeIfFinalFragment = (node: Node, container: HTMLDivElement): void => {\n  const element = nodeToHtmlElement(node);\n  if (!container.contains(element) || container === element) {\n    return;\n  }\n\n  if (element && element.hasAttribute('data-integrity')) {\n    container.removeChild(element);\n  }\n};\n\nexport function handleFragmentDeletion(\n  event: React.FormEvent<HTMLDivElement>,\n  selection: Selection\n): void {\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  const container = event.currentTarget;\n\n  for (let i = 0; i < selection.rangeCount; i++) {\n    const range = selection.getRangeAt(i);\n\n    removeIfFinalFragment(range.startContainer, container);\n    removeIfFinalFragment(range.endContainer, container);\n  }\n}\n","import { TMentionConfig } from './../RichMentionsContext';\nimport { transformFinalFragment } from './transformFinalFragment';\n\nfunction replaceSpacesWithInsecableSpaces(text: string): string {\n  const div = document.createElement('div');\n  div.innerHTML = text;\n\n  function recursiveSpaceReplacer(element: HTMLElement) {\n    Array.from(element.childNodes).forEach(element => {\n      if (element instanceof Text && element.nodeValue) {\n        element.nodeValue = element.nodeValue.replace(/( |\\t)/g, '\\u00A0');\n      } else if (element instanceof HTMLElement) {\n        recursiveSpaceReplacer(element);\n\n        if (\n          element.hasAttribute('data-rich-mentions') &&\n          !element.hasAttribute('data-integrity')\n        ) {\n          element.setAttribute('data-integrity', element.innerHTML);\n        }\n      }\n    });\n  }\n\n  recursiveSpaceReplacer(div);\n\n  return div.innerHTML;\n}\n\nexport function getConfigsInitialValue(configs: TMentionConfig<any>[]) {\n  return (text: string): string => {\n    // This replace all fragment \"<@vince|U515>\" to html ones based on your configs\n    const formattedTextWithHtml = configs.reduce((acc, config) => {\n      return acc.replace(config.match, $0 => {\n        const span = document.createElement('span');\n        transformFinalFragment(span, $0, config);\n        return span.outerHTML;\n      });\n    }, text);\n\n    // We replace all text spaces with unbreakable ones to avoid problem with contenteditable.\n    // Currently, contenteditable remove multiple space but we want to keep it.\n    return replaceSpacesWithInsecableSpaces(formattedTextWithHtml);\n  };\n}\n","import React, {\n  FormEvent,\n  KeyboardEvent,\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\n\nimport {\n  initialContext,\n  RichMentionsContext,\n  TMentionItem,\n  TMentionContext,\n  TMentionConfig,\n} from './RichMentionsContext';\n\nimport { getFragment } from './utils/getFragment';\nimport { fixCursorInsertion } from './utils/fixCursorInsertion';\nimport { insertFragment as insertFragmentUtils } from './utils/insertFragment';\nimport { getTransformedValue as getTransformedValueUtils } from './utils/getTransformedValue';\nimport { handleFragmentEscape } from './utils/handleFragmentEscape';\nimport { removeBrokenFragments } from './utils/removeBrokenFragments';\nimport { handleFragmentCreation } from './utils/handleFragmentCreation';\nimport { handleFragmentDeletion } from './utils/handleFragmentDeletion';\nimport { getConfigsInitialValue } from './utils/getConfigsInitialValue';\nimport { transformFinalFragment } from './utils/transformFinalFragment';\nimport { deleteSelection } from './utils/deleteSelection';\n\ninterface TProps<T = object> {\n  children: React.ReactNode | React.ReactNode[];\n  configs: TMentionConfig<T>[];\n  onUpdate?: (value: string) => void;\n  getContext?:\n    | React.MutableRefObject<TMentionContext | null>\n    | ((ref: TMentionContext) => void);\n  getInitialHTML?: (text: string) => string;\n}\n\nexport function RichMentionsProvider<T = object>({\n  children,\n  configs,\n  getContext,\n  onUpdate,\n  getInitialHTML = getConfigsInitialValue(configs),\n}: TProps<T>) {\n  // The reference to always have function context working\n  const ref = useRef<TMentionContext>({\n    ...initialContext,\n    getInitialHTML,\n    setPositionFixed,\n    setInputElement,\n    selectItem,\n    onBeforeChanges,\n    onChanges,\n    onKeyDown,\n    closeAutocomplete,\n    openAutocomplete,\n    setActiveItemIndex,\n    getTransformedValue,\n    insertFragment,\n    setValue,\n  });\n\n  // The state to controls react rendering\n  const [__ctx__, setState] = useState<TMentionContext>(ref.current);\n  const updateState = (data: Partial<TMentionContext>) => {\n    ref.current = {\n      ...ref.current,\n      ...data,\n    };\n    setState(ref.current);\n  };\n\n  // Listen for selection change to open/close the autocomplete modal\n  useEffect(() => {\n    document.addEventListener('selectionchange', onSelectionChange, false);\n    return () => {\n      document.removeEventListener('selectionchange', onSelectionChange, false);\n    };\n  });\n\n  // Expose reference with new context\n  useEffect(() => {\n    if (typeof getContext === 'function') {\n      getContext(__ctx__);\n    } else if (typeof getContext === 'object') {\n      getContext.current = __ctx__;\n    }\n  }, [getContext, __ctx__]);\n\n  /**\n   * Listener to update autocomplete css fixed position\n   * Helpful if you have an input fixed at the top/bottom of your website.\n   *\n   * @param {boolean} fixed Is input element position fixed ? Help to set correct autocomplete position\n   * @returns {void}\n   */\n  function setPositionFixed(fixed: boolean): void {\n    updateState({ fixed });\n  }\n\n  /**\n   * Listener to set new inputElement.\n   * Should be used only by the <InputElement /> to mount/unmount itself\n   *\n   * @param {HTMLDivElement | null} inputElement input element\n   * @returns {void}\n   */\n  function setInputElement(inputElement: HTMLDivElement | null): void {\n    updateState({ inputElement });\n  }\n\n  /**\n   * Called by the autocomplete to select an item.\n   * It will transform the current pending fragment to a final one and\n   * reset the autocomplete\n   *\n   * @param {TMentionItem} item The item from autocomplete to select\n   * @returns {void}\n   */\n  function selectItem(item: TMentionItem<T>): void {\n    const opened = ref.current.opened;\n\n    if (opened?.element) {\n      transformFinalFragment(opened.element, item.ref, opened.config);\n    }\n\n    updateState({\n      index: 0,\n      results: [],\n      opened: null,\n      loading: false,\n      activeSearch: '',\n    });\n  }\n\n  /**\n   * Bounded to input.onBeforeInput event.\n   * Will help to insert/delete/escape fragment before it already happens to avoid a flash\n   *\n   * @param {FormEvent<HTMLDivElement>} event\n   * @returns {void}\n   */\n  function onBeforeChanges(event: FormEvent<HTMLDivElement>): void {\n    let selection = document.getSelection();\n    if (!selection || !selection.anchorNode) {\n      return;\n    }\n\n    // If there is text selection, delete it.\n    // We need to do it manually because of the preventDefault() :'(\n    // Update 'text' variable as the content could be updated\n    if (deleteSelection(selection, event)) {\n      selection = document.getSelection();\n      if (!selection || !selection.anchorNode) {\n        return;\n      }\n    }\n\n    fixCursorInsertion(event, selection);\n    handleFragmentDeletion(event, selection);\n    handleFragmentEscape(event, selection, configs);\n    handleFragmentCreation(event, selection, configs, ref.current);\n    removeBrokenFragments<T>(event.currentTarget, configs);\n  }\n\n  /**\n   * Will handle document.onSelectionChange event\n   * In this case, just to know if wha have focus on a fragment to open/close the autocomplete\n   *\n   * @returns {void}\n   */\n  function onSelectionChange(): void {\n    const {\n      inputElement,\n      opened,\n      closeAutocomplete,\n      openAutocomplete,\n      getTransformedValue,\n    } = ref.current;\n\n    const selection = document.getSelection();\n    const fragment =\n      selection?.anchorNode &&\n      (getFragment(selection.anchorNode) ||\n        (selection.anchorOffset === 0 &&\n          selection.anchorNode.previousSibling &&\n          getFragment(selection.anchorNode.previousSibling)));\n\n    const shouldOpened =\n      fragment &&\n      !fragment.hasAttribute('data-integrity') &&\n      inputElement &&\n      inputElement.contains(fragment);\n\n    if (opened && !shouldOpened) {\n      closeAutocomplete();\n    } else if (\n      shouldOpened &&\n      fragment &&\n      (!opened || opened.element !== fragment)\n    ) {\n      const text = fragment.textContent || '';\n      const config = configs.find(cfg => text.match(cfg.query));\n      if (config) {\n        openAutocomplete(fragment, text, config);\n      }\n    }\n    onUpdate && onUpdate(getTransformedValue());\n  }\n\n  /**\n   * Handle input.onChange event\n   * This part is just to remove broken fragment (let say you removed the \"@\" of a mention) and to\n   * Open/Close autocomplete based on the new cursor position.\n   *\n   * @param {FormEvent<HTMLDivElement>} event\n   * @returns {void}\n   */\n  function onChanges(): void {\n    const { inputElement, openAutocomplete, closeAutocomplete } = ref.current;\n    const selection = document.getSelection();\n\n    if (inputElement) {\n      removeBrokenFragments<T>(inputElement, configs);\n    }\n\n    // Autocomplete\n    const fragment = selection?.anchorNode && getFragment(selection.anchorNode);\n\n    if (fragment && !fragment.hasAttribute('data-integrity')) {\n      const text = fragment.textContent || '';\n      const config = configs.find(cfg => text.match(cfg.query));\n      if (config) {\n        openAutocomplete(fragment, text, config);\n      }\n    } else if (ref.current.opened) {\n      closeAutocomplete();\n    }\n\n    onUpdate && onUpdate(getTransformedValue());\n  }\n\n  /**\n   * Handle input.onKeyDown event\n   * Just to manage the selected item on the autocomplete if opened\n   *\n   * @param {KeyboardEvent<HTMLDivElement>} event\n   * @returns {void}\n   */\n  function onKeyDown(event: KeyboardEvent<HTMLDivElement>): void {\n    const {\n      opened,\n      results,\n      index,\n      selectItem,\n      closeAutocomplete,\n    } = ref.current;\n\n    if (!opened || !results.length) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case 40: // down\n        event.preventDefault();\n        updateState({\n          index: Math.min(index + 1, results.length - 1),\n        });\n        break;\n\n      case 38: // up\n        event.preventDefault();\n        updateState({\n          index: Math.max(index - 1, 0),\n        });\n        break;\n\n      case 9: // tab\n      case 13: // enter\n        if (results[index]) {\n          event.preventDefault();\n          selectItem(results[index]);\n        }\n        break;\n\n      case 27: // escape\n        closeAutocomplete();\n        break;\n    }\n  }\n\n  /**\n   * Public method to close the autocomplete\n   *\n   * @returns {void}\n   */\n  function closeAutocomplete(): void {\n    updateState({\n      opened: null,\n      loading: false,\n      results: [],\n      index: 0,\n      activeSearch: '',\n    });\n  }\n\n  /*\n  function getCaretCoordinates() {\n    let x = 0,\n      y = 0;\n    const isSupported = typeof window.getSelection !== \"undefined\";\n    if (isSupported) {\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount !== 0) {\n        const range = selection.getRangeAt(0).cloneRange();\n        range.collapse(true);\n        const rect = range.getClientRects()[0];\n        if (rect) {\n          x = rect.left;\n          y = rect.top;\n        }\n      }\n    }\n    return { x, y };\n  }\n\n  */\n\n  /**\n   * Public method to open the autocomplete\n   *\n   * @param {HTMLElement} node Selected fragment where to open the autocomplete (for position)\n   * @param {string} text The fragment text we are autocompleting for\n   * @param {TMentionConfig} config The config object linked to the mention\n   * @returns {void}\n   */\n  function openAutocomplete<T>(\n    node: HTMLElement,\n    text: string,\n    config: TMentionConfig<T>\n  ): void {\n    //const fixed = ref.current.fixed;\n    //const rect = { top: 0, right: 0, bottom: 0, left: 0 };\n    let nodeRect = node.getBoundingClientRect();\n    let parentRect = { top: 0, right: 0, bottom: 0, left: 0 }; //node.getBoundingClientRect();\n    //const rects = node.getClientRects();\n\n    if (ref.current.inputElement) {\n      parentRect = ref.current.inputElement.getBoundingClientRect();\n    }\n\n    //const caretPos = getCaretCoordinates();\n    const x = nodeRect.right - parentRect.left;\n    const y = nodeRect.bottom - parentRect.top;\n    /*rect.top = nodeRect.top;\n    rect.right = nodeRect.right;\n    rect.bottom = nodeRect.bottom;\n    rect.left = nodeRect.left;\n\n    // Substract based on relative parent if not position:fixed\n    if (!fixed && node.offsetParent) {\n      const parentRect = node.offsetParent.getBoundingClientRect();\n      rect.top -= parentRect.top;\n      rect.right = rect.right - parentRect.right + parentRect.width;\n      rect.left -= parentRect.left;\n      rect.bottom = rect.bottom - parentRect.bottom + parentRect.height;\n    }\n\n    // TODO ELEMENT_WIDTH and ELEMENT_HEIGHT from Input Autocomplete element\n    const ELEMENT_WIDTH = 200;\n    const ELEMENT_HEIGHT = 300;\n\n    // TODO calculate overflow\n    const overflowX = nodeRect.left + 10 + ELEMENT_WIDTH - window.innerWidth;\n    const overflowY = nodeRect.bottom + ELEMENT_HEIGHT - window.innerHeight;\n\n    const x = 200; //overflowX > 0 ? rect.right + 15 : rect.left - 3;\n    const y = 10;//overflowY > 0 ? rect.top - 3 : rect.bottom + 3;\n    */\n\n    updateState({\n      loading: true,\n      index: 0,\n      opened: {\n        config,\n        fixed: true,\n        bottom: true,\n        right: true,\n        element: node,\n        x,\n        y,\n      },\n      activeSearch: text,\n    });\n\n    const onResolve = (results: TMentionItem[] = []) => {\n      if (ref.current.opened?.element === node) {\n        updateState({\n          results,\n          loading: false,\n        });\n      }\n    };\n\n    const p = config.onMention(text, onResolve);\n    if (p instanceof Promise) {\n      p.then(onResolve, onResolve);\n    } else if (p instanceof Array) {\n      onResolve(p);\n    }\n  }\n\n  /**\n   * Just set the active item in the autocomplete based on the index.\n   * Will work only if autocomplete is already opened\n   *\n   * @param {number} index The active element in autocomplete to hover\n   * @returns {void}\n   */\n  function setActiveItemIndex(index: number): void {\n    updateState({ index });\n  }\n\n  /**\n   * Transform input html content to usable text by transforming the\n   * fragments to valid text and erasing all invalid fragments.\n   *\n   * @returns {string}\n   */\n  function getTransformedValue(): string {\n    return getTransformedValueUtils(ref.current.inputElement);\n  }\n\n  /**\n   * Helper to be able to insert a fragment \"<@test|U211212>\" inside the text\n   *\n   * @param {string} code The code to insert as fragment (preprocess by configs). Ex: \"<@test|U211212>\"\n   * @param {HTMLElement?} element (optional) the html element to insert\n   * @returns {void}\n   */\n  function insertFragment(\n    code: string,\n    element: HTMLElement | null = null\n  ): void {\n    insertFragmentUtils<T>(code, element, configs, ref.current.inputElement);\n  }\n\n  /**\n   * Helper to be able to change the input content externaly\n   *\n   * @param {string} text The text to insert\n   * @returns {void}\n   */\n  function setValue(text: string): void {\n    const { inputElement, closeAutocomplete } = ref.current;\n\n    if (inputElement) {\n      inputElement.innerHTML = getInitialHTML(text);\n      removeBrokenFragments(inputElement, configs);\n    }\n\n    closeAutocomplete();\n  }\n\n  return (\n    <RichMentionsContext.Provider value={__ctx__}>\n      {children}\n    </RichMentionsContext.Provider>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { RichMentionsContext, TMentionItem } from './RichMentionsContext';\n\ninterface TProps {\n  fixed?: boolean;\n  className?: string;\n  selectedItemClassName?: string;\n  itemClassName?: string;\n}\n\nexport function RichMentionsAutocomplete<T = object>({\n  fixed = true,\n  className,\n  itemClassName,\n  selectedItemClassName,\n}: TProps) {\n  const {\n    opened,\n    index,\n    //loading,\n    results,\n    setActiveItemIndex,\n    selectItem,\n    setPositionFixed,\n  } = useContext(RichMentionsContext);\n\n  const onSelectItem = (item: TMentionItem<T>) => () => selectItem(item);\n  const onHoverItem = (index: number) => () => setActiveItemIndex(index);\n  const divAttributes =\n    process.env.NODE_ENV !== 'production' ? { 'data-cy': 'autocomplete' } : {};\n  const itemAttributes =\n    process.env.NODE_ENV !== 'production'\n      ? { 'data-cy': 'autocomplete_item' }\n      : {};\n\n  useEffect(() => {\n    setPositionFixed(fixed);\n  }, [fixed, setPositionFixed]);\n\n  return opened && results.length ? (\n    <div\n      {...divAttributes}\n      className={`${className}`}\n      style={{\n        position: fixed ? 'fixed' : 'absolute',\n        left: opened.x + 'px',\n        top: opened.y + 'px',\n      }}\n    >\n      <div\n        className=\"autocomplete-list\"\n        style={{\n          bottom: opened.bottom ? '0px' : 'auto',\n          right: opened.right ? '0px' : 'auto',\n        }}\n      >\n        {results.map((item, i) => (\n          <button\n            className={`${itemClassName} ${\n              i === index ? selectedItemClassName : ''\n            }`}\n            type=\"button\"\n            key={item.ref}\n            onClick={onSelectItem(item)}\n            onMouseOver={onHoverItem(index)}\n            {...itemAttributes}\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  ) : null;\n}\n"],"names":["noop","initialContext","getTransformedValue","insertFragment","setValue","activeSearch","inputElement","setInputElement","selectItem","setActiveItemIndex","opened","index","loading","results","closeAutocomplete","openAutocomplete","onBeforeChanges","onKeyDown","onChanges","fixed","setPositionFixed","RichMentionsContext","createContext","RichMentionsInput","defaultValue","singleLine","placeholder","className","onEnter","divAttributes","ref","useRef","useContext","getInitialHTML","useState","isEmpty","setEmpty","current","mergeOnKeyDown","event","key","setTimeout","preventDefault","onInput","onBeforeInput","style","whiteSpace","overflow","React","styles","xinput","xempty","contentEditable","dangerouslySetInnerHTML","__html","nodeToHtmlElement","node","nodeType","Node","TEXT_NODE","parentElement","getFragment","element","hasAttribute","setCursorPosition","position","selection","document","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","escapeFragmentWithValue","text","textNode","createTextNode","replace","parent","insertBefore","nextSibling","length","fixCursorInsertion","defaultPrevented","insertion","data","container","currentTarget","i","rangeCount","getRangeAt","startContainer","endContainer","contains","Text","startOffset","previousChild","previousSibling","previousElement","previousElementSibling","appendChild","endOffset","isFinal","textContent","deleteSelection","deleted","lastDeletedRange","deleteContents","insertNode","transformFinalFragment","span","config","content","match","matchDisplay","setAttribute","customizeFragment","innerHTML","removeBrokenFragments","configs","Array","from","children","forEach","fixBrokenElement","HTMLBRElement","div","createElement","HTMLDivElement","attributes","removeChild","getAttribute","isValid","some","cfg","query","isSpace","char","test","needSpaceBefore","offset","charAt","includes","nodeName","prevText","needSpaceAfter","nextText","customFragment","find","insertAfterNode","insertBeforeNode","addSpaceBefore","addSpaceAfter","anchorNode","anchorOffset","fragment","firstPart","substr","secondPart","subFragment","childNodes","firstElementChild","space","brCharacter","Date","now","brMatcher","RegExp","map","el","getNodeContent","join","trim","Element","richValue","result","handleFragmentEscape","newText","matches","input","handleFragmentCreation","ctx","fragmentText","textBeforeQuery","textQuery","afterInsertion","after","isContainer","removeIfFinalFragment","handleFragmentDeletion","replaceSpacesWithInsecableSpaces","recursiveSpaceReplacer","nodeValue","HTMLElement","getConfigsInitialValue","formattedTextWithHtml","reduce","acc","$0","outerHTML","RichMentionsProvider","getContext","onUpdate","__ctx__","setState","updateState","useEffect","addEventListener","onSelectionChange","removeEventListener","item","shouldOpened","keyCode","Math","min","max","nodeRect","getBoundingClientRect","parentRect","top","right","bottom","left","x","y","onResolve","p","onMention","Promise","then","getTransformedValueUtils","code","insertFragmentUtils","Provider","value","RichMentionsAutocomplete","itemClassName","selectedItemClassName","onSelectItem","onHoverItem","process","itemAttributes","type","onClick","onMouseOver","name"],"mappings":"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"}