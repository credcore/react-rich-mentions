{"version":3,"file":"react-rich-mentions.cjs.development.js","sources":["../src/utils/noop.ts","../src/RichMentionsContext.ts","../src/RichMentionsInput.tsx","../src/utils/nodeToHtmlElement.ts","../src/utils/getFragment.ts","../src/utils/setCursorPosition.ts","../src/utils/escapeFragmentWithValue.ts","../src/utils/fixCursorInsertion.ts","../src/utils/deleteSelection.ts","../src/utils/transformFinalFragment.ts","../src/utils/removeBrokenFragments.ts","../src/utils/insertFragment.ts","../src/utils/getTransformedValue.ts","../src/utils/handleFragmentEscape.ts","../src/utils/handleFragmentCreation.ts","../src/utils/handleFragmentDeletion.ts","../src/utils/getConfigsInitialValue.ts","../src/RichMentionsProvider.tsx","../src/RichMentionsAutocomplete.tsx"],"sourcesContent":["export const noop = () => {};\n","import { createContext } from 'react';\nimport { noop } from './utils/noop';\n\nexport type TMentionItem<T = object> = T & {\n  name: string;\n  ref: string;\n};\n\nexport interface TMentionConfig<T = object> {\n  query: RegExp;\n  match: RegExp;\n  matchDisplay: string;\n  customizeFragment?: (fragment: HTMLSpanElement, final: boolean) => void;\n  onMention: (\n    text: string,\n    callback?: (results: TMentionItem<T>[]) => void\n  ) => void | TMentionItem<T>[] | Promise<TMentionItem<T>[]>;\n}\n\nexport interface TMentionContext {\n  getTransformedValue: () => string;\n  setValue: (text: string) => void;\n  insertFragment: (ref: string, element?: HTMLElement) => void;\n  activeSearch: string;\n  inputElement: HTMLDivElement | null;\n  setInputElement: (newInputElement: HTMLDivElement | null) => void;\n  selectItem: (item: TMentionItem<any>) => void;\n  setActiveItemIndex: (index: number) => void;\n  opened: null | {\n    config: TMentionConfig<any>;\n    element: HTMLSpanElement;\n    fixed: boolean;\n    bottom: boolean;\n    right: boolean;\n    x: number;\n    y: number;\n  };\n  index: number;\n  loading: boolean;\n  results: TMentionItem<any>[];\n  closeAutocomplete: () => void;\n  openAutocomplete: <T>(\n    node: HTMLElement,\n    value: string,\n    config: TMentionConfig<T>\n  ) => void;\n  onBeforeChanges: (event: React.FormEvent<HTMLDivElement>) => void;\n  onKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  onChanges: (event: React.FormEvent<HTMLDivElement>) => void;\n  getInitialHTML?: (value: string) => string;\n  fixed: boolean;\n  setPositionFixed: (fixed: boolean) => void;\n}\n\nexport const initialContext: TMentionContext = {\n  getTransformedValue: () => '',\n  insertFragment: noop,\n  setValue: noop,\n  activeSearch: '',\n  inputElement: null,\n  setInputElement: noop,\n  selectItem: noop,\n  setActiveItemIndex: noop,\n  opened: null,\n  index: 0,\n  loading: false,\n  results: [],\n  closeAutocomplete: noop,\n  openAutocomplete: noop,\n  onBeforeChanges: noop,\n  onKeyDown: noop,\n  onChanges: noop,\n  fixed: true,\n  setPositionFixed: noop,\n};\n\nexport const RichMentionsContext = createContext<TMentionContext>(\n  initialContext\n);\n","import React, { HTMLProps, useRef, useContext } from 'react';\nimport { RichMentionsContext } from './RichMentionsContext';\n\ninterface TProps extends HTMLProps<HTMLDivElement> {\n  defaultValue?: string;\n  singleLine: Boolean;\n  onEnter?: () => void;\n}\n\nexport function RichMentionsInput({\n  defaultValue,\n  singleLine,\n  onEnter,\n  ...divAttributes\n}: TProps) {\n  const ref = useRef<string | null>(null);\n  const {\n    setInputElement,\n    onBeforeChanges,\n    onKeyDown,\n    onChanges,\n    getInitialHTML,\n    opened,\n  } = useContext(RichMentionsContext);\n\n  if (ref.current === null && defaultValue && getInitialHTML) {\n    ref.current = getInitialHTML(defaultValue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // @ts-ignore\n    divAttributes['data-cy'] = 'input';\n  }\n\n  const mergeOnKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === 'Enter') {\n      if (onEnter && !opened) {\n        //Because the updates, has to be applied for the event to get the correct value\n        //TODO: Better handling\n        setTimeout(() => {\n          onEnter();\n        }, 200);\n      }\n\n      if (singleLine) {\n        event.preventDefault();\n      }\n    }\n    onKeyDown(event);\n\n    if (divAttributes.onKeyDown) {\n      divAttributes.onKeyDown(event);\n    }\n  };\n\n  const onInput = (event: React.FormEvent<HTMLDivElement>) => {\n    if (divAttributes.onInput) {\n      divAttributes.onInput(event);\n    }\n    onChanges(event);\n  };\n\n  const onBeforeInput = (event: React.FormEvent<HTMLDivElement>) => {\n    onBeforeChanges(event);\n\n    if (divAttributes.onBeforeInput) {\n      divAttributes.onBeforeInput(event);\n    }\n  };\n\n  let style = {\n    outline: 0,\n  };\n  if (singleLine) {\n    style = { ...style, ...{ whiteSpace: 'nowrap', overflow: 'hidden' } };\n  }\n  return (\n    <div\n      ref={setInputElement}\n      {...divAttributes}\n      contentEditable={true}\n      onBeforeInput={onBeforeInput}\n      onKeyDown={mergeOnKeyDown}\n      onInput={onInput}\n      dangerouslySetInnerHTML={{ __html: ref.current || '' }}\n      style={style}\n    ></div>\n  );\n}\n","export function nodeToHtmlElement(node: Node): HTMLElement | null {\n  return node.nodeType === Node.TEXT_NODE\n    ? node.parentElement\n    : (node as HTMLElement);\n}\n","import { nodeToHtmlElement } from './nodeToHtmlElement';\n\nexport function getFragment(node: Node): HTMLElement | null {\n  const element = nodeToHtmlElement(node);\n  return element && element.hasAttribute('data-rich-mentions') ? element : null;\n}\n","export function setCursorPosition(\n  element: HTMLElement | Node | Text,\n  position: number\n): void {\n  const selection = document.getSelection();\n  const range = document.createRange();\n\n  range.setStart(element, position);\n  range.collapse(true);\n\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n","import { setCursorPosition } from './setCursorPosition';\n\nexport function escapeFragmentWithValue(\n  element: HTMLElement,\n  text: string,\n  position: 'after' | 'before' = 'after'\n) {\n  const textNode = document.createTextNode(text.replace(/\\s/g, '\\u00A0'));\n  const parent = element.parentElement;\n\n  if (parent) {\n    if (position === 'after') {\n      parent.insertBefore(textNode, element.nextSibling);\n    } else {\n      parent.insertBefore(textNode, element);\n    }\n    setCursorPosition(textNode, text.length);\n  }\n}\n","import { nodeToHtmlElement } from './nodeToHtmlElement';\nimport { escapeFragmentWithValue } from './escapeFragmentWithValue';\n\nexport function fixCursorInsertion(\n  event: React.FormEvent<HTMLDivElement>,\n  selection: Selection\n): void {\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // @ts-ignore\n  const insertion: string = event.data;\n  const container = event.currentTarget;\n\n  for (let i = 0; i < selection.rangeCount; i++) {\n    const range = selection.getRangeAt(i);\n\n    // Same element\n    if (range.startContainer === range.endContainer) {\n      const element = nodeToHtmlElement(range.startContainer);\n\n      if (!container.contains(element)) {\n        continue;\n      }\n\n      // If outside pending fragment, insert char inside\n      if (range.startContainer instanceof Text && range.startOffset === 0) {\n        const previousChild = range.startContainer.previousSibling;\n        const previousElement = range.startContainer.previousElementSibling;\n        if (\n          previousChild &&\n          previousElement &&\n          previousChild === previousElement &&\n          previousElement.hasAttribute('data-rich-mentions') &&\n          !previousElement.hasAttribute('data-integrity')\n        ) {\n          previousElement.appendChild(document.createTextNode(insertion));\n          event.preventDefault();\n          continue;\n        }\n      }\n\n      // TODO range.endContainer\n      if (\n        !element ||\n        container === element ||\n        !element.hasAttribute('data-rich-mentions')\n      ) {\n        continue;\n      }\n\n      // At first position of fragment, move before it\n      if (range.endOffset === 0) {\n        escapeFragmentWithValue(element, insertion, 'before');\n        event.preventDefault();\n        continue;\n      }\n\n      const isFinal = element.hasAttribute('data-integrity');\n      const text = element.textContent || '';\n\n      // Move outside final fragment\n      if (isFinal && range.startOffset === text.length) {\n        escapeFragmentWithValue(element, insertion, 'after');\n        event.preventDefault();\n        continue;\n      }\n    }\n  }\n}\n","import { setCursorPosition } from './setCursorPosition';\n\nexport function deleteSelection(\n  selection: Selection,\n  event?: React.FormEvent<HTMLDivElement>\n): boolean {\n  let deleted = false;\n  let lastDeletedRange = null;\n\n  for (let i = 0; i < selection.rangeCount; ++i) {\n    const range = selection.getRangeAt(i);\n\n    if (\n      range.startContainer !== range.endContainer ||\n      range.startOffset !== range.endOffset\n    ) {\n      deleted = true;\n      lastDeletedRange = range;\n      range.deleteContents();\n    }\n  }\n\n  // @ts-ignore\n  if (event?.data && lastDeletedRange) {\n    // @ts-ignore\n    const textNode = document.createTextNode(event.data);\n    lastDeletedRange.insertNode(textNode);\n    setCursorPosition(textNode, 1);\n    event.preventDefault();\n  }\n\n  return deleted;\n}\n","import { TMentionConfig, TMentionItem } from '../RichMentionsContext';\nimport { setCursorPosition } from './setCursorPosition';\n\nexport function transformFinalFragment<T>(\n  span: HTMLSpanElement,\n  ref: TMentionItem['ref'],\n  config: TMentionConfig<T>\n): void {\n  const content = ref\n    .replace(config.match, config.matchDisplay)\n    .replace(/\\s/g, '\\u00A0');\n\n  span.textContent = content;\n  span.setAttribute('data-rich-mentions', ref);\n  span.setAttribute('spellcheck', 'false');\n\n  if (process.env.NODE_ENV !== 'production') {\n    span.setAttribute('data-cy', 'final');\n  }\n\n  if (config.customizeFragment) {\n    config.customizeFragment(span, true);\n  }\n\n  span.setAttribute('data-integrity', span.innerHTML);\n\n  if (span.parentElement) {\n    // TODO only if no space after\n    const textNode = document.createTextNode('\\u00A0');\n    span.parentElement.insertBefore(textNode, span.nextSibling);\n    setCursorPosition(textNode, 1);\n  }\n}\n","import { TMentionConfig } from '../RichMentionsContext';\n\nexport function removeBrokenFragments<T>(\n  inputElement: HTMLDivElement,\n  configs: TMentionConfig<T>[]\n) {\n  Array.from(inputElement.children).forEach(function fixBrokenElement(\n    element,\n    index\n  ) {\n    const parent = element.parentElement as HTMLElement;\n\n    // Replace BR with div>br\n    // There is a bug on chrome occuring when the cursor is just after a br, the selection is broken and\n    // we can't locate its position. By moving them inside a div it fixes the problem\n    if (element instanceof HTMLBRElement) {\n      if (\n        parent.children.length !== 1 &&\n        index !== parent.children.length - 1\n      ) {\n        const div = document.createElement('div');\n        parent.insertBefore(div, element);\n        div.appendChild(element);\n      }\n      return;\n    }\n\n    if (element instanceof HTMLDivElement && !element.attributes.length) {\n      Array.from(element.children).forEach(fixBrokenElement);\n      return;\n    }\n\n    const text = element.textContent || '';\n\n    // Fixes a Chrome bug:\n    // - Add a span with color on a contenteditable.\n    // - Remove the span with backspace.\n    // - Type text.\n    // Chrome will try to restore the style by adding a <font> with specific styles.\n    if (\n      !(element instanceof Text) &&\n      !element.hasAttribute('data-rich-mentions')\n    ) {\n      parent.insertBefore(document.createTextNode(text), element);\n      parent.removeChild(element);\n      return;\n    }\n\n    // On final fragments, avoid edition.\n    // The data-integrity attribute contains the original fragment content.\n    // If it does not match, just remove the entire fragment.\n    if (element.hasAttribute('data-integrity')) {\n      // final fragment, if not valid remove it completely\n      if (element.getAttribute('data-integrity') !== element.innerHTML) {\n        parent.removeChild(element);\n      }\n      return;\n    }\n\n    // If we have a pending fragment that is now invalid since the last (let\n    // say you just removed the '@' from it, then we can safely extract the\n    // text, remove the fragment, and insert the text back without it.\n    const isValid = configs.some(cfg => text.match(cfg.query));\n    if (!isValid) {\n      parent.insertBefore(document.createTextNode(text), element.nextSibling);\n      parent.removeChild(element);\n    }\n  });\n}\n","import { getFragment } from './getFragment';\nimport { deleteSelection } from './deleteSelection';\nimport { setCursorPosition } from './setCursorPosition';\nimport { transformFinalFragment } from './transformFinalFragment';\nimport { TMentionConfig } from '../RichMentionsContext';\nimport { removeBrokenFragments } from './removeBrokenFragments';\n\nconst isSpace = (char: string) => /(\\u00A0|\\s)/.test(char);\n\nconst needSpaceBefore = (\n  text: string,\n  offset: number,\n  node: Node,\n  defaultValue: boolean\n): boolean => {\n  if (offset > 0) {\n    return !isSpace(text.charAt(offset - 1));\n  }\n\n  // Do not add space if the previous element is a block adding a line break\n  if (['DIV', 'BR'].includes(node.nodeName)) {\n    return false;\n  }\n\n  if (node.previousSibling) {\n    // TODO get first previous element with text\n    const prevText = node.previousSibling.textContent || '';\n    return !!prevText.length && !isSpace(prevText.charAt(prevText.length - 1));\n  }\n\n  return defaultValue;\n};\n\nconst needSpaceAfter = (text: string, offset: number, node: Node): boolean => {\n  if (offset < text.length) {\n    return !isSpace(text.charAt(text.length - 1));\n  }\n\n  if (!node.nextSibling) {\n    return true;\n  }\n\n  const nextText = node.nextSibling.textContent || '';\n  // TODO get first next fragment with content...\n  return !nextText.length || !isSpace(nextText.charAt(0));\n};\n\nexport function insertFragment<T>(\n  ref: string,\n  customFragment: HTMLElement | null,\n  configs: TMentionConfig<T>[],\n  inputElement: HTMLDivElement | null\n) {\n  const config = configs.find(cfg => ref.match(cfg.match));\n\n  // inputElement was removed from DOM for some reasons\n  if (!inputElement || (!config && !customFragment)) {\n    return;\n  }\n\n  let insertAfterNode: Node | null = null;\n  let insertBeforeNode: Node | null = null;\n  let addSpaceBefore = false;\n  let addSpaceAfter = false;\n\n  const selection = document.getSelection();\n\n  // Is selection inside inputElement ?\n  // (avoid inserting fragments on other parts of the website)\n  if (\n    selection &&\n    selection.anchorNode &&\n    inputElement.contains(selection.anchorNode)\n  ) {\n    let { anchorNode: node, anchorOffset: offset } = selection;\n    let fragment = getFragment(node);\n\n    // Avoid problem with text selection\n    // Just delete it before processing\n    deleteSelection(selection);\n\n    // If we are at the fragment end when inserting content, we have to\n    // change the cursor position to be at first position on the next one.\n    // If the next fragment does not exist, add a new one.\n    // <span>\"text\"|<span>   -> <span>\"text\"</span>\"|\"\n    if (fragment && offset === (node.textContent || '').length) {\n      if (!fragment.nextSibling) {\n        inputElement.insertBefore(document.createTextNode(''), null);\n      }\n      node = fragment.nextSibling as Node;\n      offset = 0;\n      fragment = null;\n    }\n\n    if (fragment) {\n      // Final fragment can't be edited\n      // Just remove it and add the insertion just after.\n      if (fragment.hasAttribute('data-integrity')) {\n        insertBeforeNode = fragment.nextSibling;\n        fragment.parentElement?.removeChild(fragment);\n      } else {\n        const text = node.textContent || '';\n\n        // In this case, we are in the middle of a pending fragment.\n        // <span>@vin|ce</span> -> <span>@vin</span>\" [insertion] \"ce\"\n        if (offset > 0 && offset < text.length) {\n          const firstPart = text.substr(0, offset);\n          const secondPart = text.substr(offset);\n          const subFragment = document.createTextNode(secondPart);\n\n          inputElement.insertBefore(subFragment, fragment.nextSibling);\n          node.textContent = firstPart;\n          addSpaceBefore = true;\n          insertBeforeNode = subFragment;\n        }\n\n        addSpaceBefore = needSpaceBefore(text, offset, node, addSpaceBefore);\n        addSpaceAfter = needSpaceAfter(text, offset, node);\n      }\n    } else {\n      // Text inside the contenteditable (not nested)\n      let text = node.textContent || '';\n\n      // If we are at the first position in a fragment, we need to insert the new\n      // fragment before it, not after.\n      if (offset > 0) {\n        insertAfterNode = node;\n      } else {\n        // If next block is <div><br/></div> we have to replace it to a single <div></div>\n        const element = node as HTMLElement;\n        if (\n          !text &&\n          element.nodeName === 'DIV' &&\n          !element.attributes.length &&\n          element.childNodes.length === 1 &&\n          element.firstElementChild instanceof HTMLBRElement\n        ) {\n          if (element.previousSibling instanceof HTMLDivElement) {\n            insertBeforeNode = node;\n            element.removeChild(element.firstElementChild);\n          } else {\n            insertAfterNode = node;\n            element.removeChild(element.firstElementChild);\n          }\n        } else {\n          insertBeforeNode = node;\n        }\n      }\n\n      // In this case, we need to add the insertion at the center of a TextNode.\n      // Let say we have \"hello|world\", as you can't add span inside TextNode, we have\n      // to split it in two differents nodes : \"Hello\" and \"world\", and insert the span\n      // between them.\n      if (offset > 0 && offset < text.length) {\n        const firstPart = text.substr(0, offset);\n        const secondPart = text.substr(offset);\n\n        text = firstPart;\n        node.textContent = firstPart;\n\n        node.parentElement?.insertBefore(\n          document.createTextNode(secondPart),\n          node.nextSibling\n        );\n      }\n\n      addSpaceBefore = needSpaceBefore(text, offset, node, addSpaceBefore);\n      addSpaceAfter = needSpaceAfter(text, offset, node);\n    }\n  } else {\n    // Can't find the selection, let's just insert the fragment at the\n    // end of the div[contenteditable]\n    const text = inputElement.textContent || '';\n    addSpaceAfter = true;\n    addSpaceBefore = !isSpace(text.charAt(text.length - 1));\n  }\n\n  // Create fragment\n  const span = document.createElement('span');\n  if (config) {\n    transformFinalFragment(span, ref, config);\n  } else if (customFragment) {\n    span.appendChild(customFragment);\n    span.setAttribute('data-rich-mentions', ref);\n    span.setAttribute('data-integrity', span.innerHTML);\n    span.setAttribute('spellcheck', 'false');\n\n    if (process.env.NODE_ENV !== 'production') {\n      span.setAttribute('data-cy', 'final');\n    }\n  }\n\n  // Insert it at chosen position\n  if (insertAfterNode && insertAfterNode !== inputElement) {\n    insertAfterNode.parentElement?.insertBefore(\n      span,\n      insertAfterNode.nextSibling\n    );\n  } else if (insertBeforeNode && insertBeforeNode !== inputElement) {\n    insertBeforeNode.parentElement?.insertBefore(span, insertBeforeNode);\n  } else {\n    inputElement.appendChild(span);\n  }\n\n  // Insert space before if needed\n  if (addSpaceBefore) {\n    const space = document.createTextNode('\\u00A0');\n    span.parentElement?.insertBefore(space, span);\n  }\n\n  // Insert space after if needed\n  if (addSpaceAfter) {\n    const space = document.createTextNode('\\u00A0');\n    span.parentElement?.insertBefore(space, span.nextSibling);\n  }\n\n  // Set cursor position (always true)\n  if (span.nextSibling) {\n    setCursorPosition(span.nextSibling, addSpaceAfter ? 1 : 0);\n  }\n\n  // If the user is selecting text and some parts of fragment, we need to be sure to delete it correctly\n  // Ex where \"[\" and \"]\" are the start and ending of text selection:\n  // input: \"he[llo <span>@vin]ce</span>\"\n  // output: \"he @insertedfragment <span>ce</span>\"\n  // In this case, the fragment \"ce\" need to be deleted.\n  removeBrokenFragments<T>(inputElement, configs);\n}\n","import { TMentionContext } from '../RichMentionsContext';\n\nexport function getTransformedValue(\n  inputElement: TMentionContext['inputElement']\n): string {\n  if (!inputElement || inputElement.innerHTML === '<br>') {\n    return '';\n  }\n\n  const brCharacter = `_br_${Date.now()}_`;\n  const brMatcher = new RegExp(`\\\\n?${brCharacter}\\\\n?`, 'g');\n\n  return Array.from(inputElement.childNodes)\n    .map(el => getNodeContent(el, brCharacter))\n    .join('')\n    .replace(/\\u00A0/g, ' ') // Replace back insecable spaces\n    .replace(/\\n{2,}/g, '\\n') // Following lines are considered as one in HTML\n    .replace(brMatcher, '\\n') // Replace <br/> to line break\n    .trim();\n}\n\nfunction getNodeContent(element: Node, brCharacter: string): string {\n  if (element instanceof Text) {\n    return element.textContent || '';\n  }\n\n  if (element instanceof HTMLBRElement) {\n    return brCharacter;\n  }\n\n  if (element instanceof Element) {\n    const richValue = element.getAttribute('data-rich-mentions');\n    if (richValue) {\n      return richValue;\n    }\n\n    const char = element instanceof HTMLDivElement ? '\\n' : '';\n    const result = Array.from(element.childNodes)\n      .map(el => getNodeContent(el, brCharacter))\n      .join('');\n\n    return `${char}${result}${char}`;\n  }\n\n  return '';\n}\n","import { TMentionConfig } from '../RichMentionsContext';\nimport { getFragment } from './getFragment';\nimport { escapeFragmentWithValue } from './escapeFragmentWithValue';\n\nexport function handleFragmentEscape(\n  event: React.FormEvent<HTMLDivElement>,\n  { anchorNode }: Selection,\n  configs: TMentionConfig<any>[]\n) {\n  if (event.defaultPrevented || !anchorNode) {\n    return;\n  }\n\n  const element = getFragment(anchorNode);\n\n  if (element) {\n    // @ts-ignore\n    const insertion: string = event.data;\n    const newText = element.textContent + insertion;\n    const isValid = configs.some(cfg => {\n      const matches = newText.match(cfg.query);\n      return matches && matches[0] === matches.input;\n    });\n\n    if (!isValid) {\n      event.preventDefault();\n      escapeFragmentWithValue(element, insertion);\n    }\n  }\n}\n","import { TMentionConfig, TMentionContext } from '../RichMentionsContext';\nimport { setCursorPosition } from './setCursorPosition';\nimport { getFragment } from './getFragment';\n\nexport function handleFragmentCreation(\n  event: React.FormEvent<HTMLDivElement>,\n  selection: Selection,\n  configs: TMentionConfig<any>[],\n  ctx: TMentionContext\n): void {\n  const { anchorNode, anchorOffset } = selection;\n\n  if (event.defaultPrevented || !anchorNode || getFragment(anchorNode)) {\n    return;\n  }\n\n  // @ts-ignore Find a property type instead of React.FormEvent<HTMLDivElement> ?\n  const insertion: string = event.data;\n  const fragmentText = anchorNode.textContent || '';\n\n  // Build new text fragment with insertion\n  const text =\n    fragmentText.substr(0, anchorOffset) +\n    insertion +\n    fragmentText.substr(anchorOffset);\n\n  // No match\n  const config = configs.find(cfg => text.match(cfg.query));\n  if (!config) {\n    return;\n  }\n\n  const matches = text.match(config.query) as RegExpMatchArray;\n  const index = matches.index || 0;\n  const textBeforeQuery = text.substr(0, index);\n\n  // Do nothing if there is a valid character before.\n  // Do nothing if the range overflow the fragment position\n  if (\n    (textBeforeQuery.length && !/\\W$/.test(textBeforeQuery)) ||\n    anchorOffset < index ||\n    anchorOffset >= index + matches[0].length\n  ) {\n    return;\n  }\n\n  anchorNode.textContent = textBeforeQuery;\n\n  const fragment = document.createElement('span');\n  const textQuery = matches[0].substr(\n    0,\n    anchorOffset - index + insertion.length\n  );\n  const afterInsertion = text.substr(index + textQuery.length);\n\n  fragment.setAttribute('data-rich-mentions', '');\n  fragment.setAttribute('spellcheck', 'false');\n\n  if (process.env.NODE_ENV !== 'production') {\n    fragment.setAttribute('data-cy', 'pending');\n  }\n\n  fragment.textContent = textQuery;\n\n  if (config.customizeFragment) {\n    config.customizeFragment(fragment, false);\n  }\n\n  const after = document.createTextNode(\n    /^\\s/.test(afterInsertion) ? afterInsertion : ' ' + afterInsertion\n  );\n\n  const isContainer = event.currentTarget === anchorNode;\n  const parent = isContainer ? anchorNode : anchorNode.parentElement;\n\n  if (parent) {\n    if (isContainer) {\n      parent.appendChild(fragment);\n      parent.appendChild(after);\n    } else {\n      parent.insertBefore(after, anchorNode.nextSibling);\n      parent.insertBefore(fragment, anchorNode.nextSibling);\n    }\n  }\n\n  event.preventDefault();\n  setCursorPosition(\n    fragment.childNodes[0],\n    anchorOffset - textBeforeQuery.length + 1\n  );\n\n  ctx.openAutocomplete(fragment, textQuery, config);\n}\n","import { nodeToHtmlElement } from './nodeToHtmlElement';\n\nconst removeIfFinalFragment = (node: Node, container: HTMLDivElement): void => {\n  const element = nodeToHtmlElement(node);\n  if (!container.contains(element) || container === element) {\n    return;\n  }\n\n  if (element && element.hasAttribute('data-integrity')) {\n    container.removeChild(element);\n  }\n};\n\nexport function handleFragmentDeletion(\n  event: React.FormEvent<HTMLDivElement>,\n  selection: Selection\n): void {\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  const container = event.currentTarget;\n\n  for (let i = 0; i < selection.rangeCount; i++) {\n    const range = selection.getRangeAt(i);\n\n    removeIfFinalFragment(range.startContainer, container);\n    removeIfFinalFragment(range.endContainer, container);\n  }\n}\n","import { TMentionConfig } from './../RichMentionsContext';\nimport { transformFinalFragment } from './transformFinalFragment';\n\nfunction replaceSpacesWithInsecableSpaces(text: string): string {\n  const div = document.createElement('div');\n  div.innerHTML = text;\n\n  function recursiveSpaceReplacer(element: HTMLElement) {\n    Array.from(element.childNodes).forEach(element => {\n      if (element instanceof Text && element.nodeValue) {\n        element.nodeValue = element.nodeValue.replace(/( |\\t)/g, '\\u00A0');\n      } else if (element instanceof HTMLElement) {\n        recursiveSpaceReplacer(element);\n\n        if (\n          element.hasAttribute('data-rich-mentions') &&\n          !element.hasAttribute('data-integrity')\n        ) {\n          element.setAttribute('data-integrity', element.innerHTML);\n        }\n      }\n    });\n  }\n\n  recursiveSpaceReplacer(div);\n\n  return div.innerHTML;\n}\n\nexport function getConfigsInitialValue(configs: TMentionConfig<any>[]) {\n  return (text: string): string => {\n    // This replace all fragment \"<@vince|U515>\" to html ones based on your configs\n    const formattedTextWithHtml = configs.reduce((acc, config) => {\n      return acc.replace(config.match, $0 => {\n        const span = document.createElement('span');\n        transformFinalFragment(span, $0, config);\n        return span.outerHTML;\n      });\n    }, text);\n\n    // We replace all text spaces with unbreakable ones to avoid problem with contenteditable.\n    // Currently, contenteditable remove multiple space but we want to keep it.\n    return replaceSpacesWithInsecableSpaces(formattedTextWithHtml);\n  };\n}\n","import React, {\n  FormEvent,\n  KeyboardEvent,\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\n\nimport {\n  initialContext,\n  RichMentionsContext,\n  TMentionItem,\n  TMentionContext,\n  TMentionConfig,\n} from './RichMentionsContext';\n\nimport { getFragment } from './utils/getFragment';\nimport { fixCursorInsertion } from './utils/fixCursorInsertion';\nimport { insertFragment as insertFragmentUtils } from './utils/insertFragment';\nimport { getTransformedValue as getTransformedValueUtils } from './utils/getTransformedValue';\nimport { handleFragmentEscape } from './utils/handleFragmentEscape';\nimport { removeBrokenFragments } from './utils/removeBrokenFragments';\nimport { handleFragmentCreation } from './utils/handleFragmentCreation';\nimport { handleFragmentDeletion } from './utils/handleFragmentDeletion';\nimport { getConfigsInitialValue } from './utils/getConfigsInitialValue';\nimport { transformFinalFragment } from './utils/transformFinalFragment';\nimport { deleteSelection } from './utils/deleteSelection';\n\ninterface TProps<T = object> {\n  children: React.ReactNode | React.ReactNode[];\n  configs: TMentionConfig<T>[];\n  onUpdate?: (value: string) => void;\n  getContext?:\n    | React.MutableRefObject<TMentionContext | null>\n    | ((ref: TMentionContext) => void);\n  getInitialHTML?: (text: string) => string;\n}\n\nexport function RichMentionsProvider<T = object>({\n  children,\n  configs,\n  getContext,\n  onUpdate,\n  getInitialHTML = getConfigsInitialValue(configs),\n}: TProps<T>) {\n  // The reference to always have function context working\n  const ref = useRef<TMentionContext>({\n    ...initialContext,\n    getInitialHTML,\n    setPositionFixed,\n    setInputElement,\n    selectItem,\n    onBeforeChanges,\n    onChanges,\n    onKeyDown,\n    closeAutocomplete,\n    openAutocomplete,\n    setActiveItemIndex,\n    getTransformedValue,\n    insertFragment,\n    setValue,\n  });\n\n  // The state to controls react rendering\n  const [__ctx__, setState] = useState<TMentionContext>(ref.current);\n  const updateState = (data: Partial<TMentionContext>) => {\n    ref.current = {\n      ...ref.current,\n      ...data,\n    };\n    setState(ref.current);\n  };\n\n  // Listen for selection change to open/close the autocomplete modal\n  useEffect(() => {\n    document.addEventListener('selectionchange', onSelectionChange, false);\n    return () => {\n      document.removeEventListener('selectionchange', onSelectionChange, false);\n    };\n  });\n\n  // Expose reference with new context\n  useEffect(() => {\n    if (typeof getContext === 'function') {\n      getContext(__ctx__);\n    } else if (typeof getContext === 'object') {\n      getContext.current = __ctx__;\n    }\n  }, [getContext, __ctx__]);\n\n  /**\n   * Listener to update autocomplete css fixed position\n   * Helpful if you have an input fixed at the top/bottom of your website.\n   *\n   * @param {boolean} fixed Is input element position fixed ? Help to set correct autocomplete position\n   * @returns {void}\n   */\n  function setPositionFixed(fixed: boolean): void {\n    updateState({ fixed });\n  }\n\n  /**\n   * Listener to set new inputElement.\n   * Should be used only by the <InputElement /> to mount/unmount itself\n   *\n   * @param {HTMLDivElement | null} inputElement input element\n   * @returns {void}\n   */\n  function setInputElement(inputElement: HTMLDivElement | null): void {\n    updateState({ inputElement });\n  }\n\n  /**\n   * Called by the autocomplete to select an item.\n   * It will transform the current pending fragment to a final one and\n   * reset the autocomplete\n   *\n   * @param {TMentionItem} item The item from autocomplete to select\n   * @returns {void}\n   */\n  function selectItem(item: TMentionItem<T>): void {\n    const opened = ref.current.opened;\n\n    if (opened?.element) {\n      transformFinalFragment(opened.element, item.ref, opened.config);\n    }\n\n    updateState({\n      index: 0,\n      results: [],\n      opened: null,\n      loading: false,\n      activeSearch: '',\n    });\n  }\n\n  /**\n   * Bounded to input.onBeforeInput event.\n   * Will help to insert/delete/escape fragment before it already happens to avoid a flash\n   *\n   * @param {FormEvent<HTMLDivElement>} event\n   * @returns {void}\n   */\n  function onBeforeChanges(event: FormEvent<HTMLDivElement>): void {\n    let selection = document.getSelection();\n    if (!selection || !selection.anchorNode) {\n      return;\n    }\n\n    // If there is text selection, delete it.\n    // We need to do it manually because of the preventDefault() :'(\n    // Update 'text' variable as the content could be updated\n    if (deleteSelection(selection, event)) {\n      selection = document.getSelection();\n      if (!selection || !selection.anchorNode) {\n        return;\n      }\n    }\n\n    fixCursorInsertion(event, selection);\n    handleFragmentDeletion(event, selection);\n    handleFragmentEscape(event, selection, configs);\n    handleFragmentCreation(event, selection, configs, ref.current);\n    removeBrokenFragments<T>(event.currentTarget, configs);\n  }\n\n  /**\n   * Will handle document.onSelectionChange event\n   * In this case, just to know if wha have focus on a fragment to open/close the autocomplete\n   *\n   * @returns {void}\n   */\n  function onSelectionChange(): void {\n    const {\n      inputElement,\n      opened,\n      closeAutocomplete,\n      openAutocomplete,\n      getTransformedValue,\n    } = ref.current;\n\n    const selection = document.getSelection();\n    const fragment =\n      selection?.anchorNode &&\n      (getFragment(selection.anchorNode) ||\n        (selection.anchorOffset === 0 &&\n          selection.anchorNode.previousSibling &&\n          getFragment(selection.anchorNode.previousSibling)));\n\n    const shouldOpened =\n      fragment &&\n      !fragment.hasAttribute('data-integrity') &&\n      inputElement &&\n      inputElement.contains(fragment);\n\n    if (opened && !shouldOpened) {\n      closeAutocomplete();\n    } else if (\n      shouldOpened &&\n      fragment &&\n      (!opened || opened.element !== fragment)\n    ) {\n      const text = fragment.textContent || '';\n      const config = configs.find(cfg => text.match(cfg.query));\n      if (config) {\n        openAutocomplete(fragment, text, config);\n      }\n    }\n    onUpdate && onUpdate(getTransformedValue());\n  }\n\n  /**\n   * Handle input.onChange event\n   * This part is just to remove broken fragment (let say you removed the \"@\" of a mention) and to\n   * Open/Close autocomplete based on the new cursor position.\n   *\n   * @param {FormEvent<HTMLDivElement>} event\n   * @returns {void}\n   */\n  function onChanges(): void {\n    const { inputElement, openAutocomplete, closeAutocomplete } = ref.current;\n    const selection = document.getSelection();\n\n    if (inputElement) {\n      removeBrokenFragments<T>(inputElement, configs);\n    }\n\n    // Autocomplete\n    const fragment = selection?.anchorNode && getFragment(selection.anchorNode);\n\n    if (fragment && !fragment.hasAttribute('data-integrity')) {\n      const text = fragment.textContent || '';\n      const config = configs.find(cfg => text.match(cfg.query));\n      if (config) {\n        openAutocomplete(fragment, text, config);\n      }\n    } else if (ref.current.opened) {\n      closeAutocomplete();\n    }\n\n    onUpdate && onUpdate(getTransformedValue());\n  }\n\n  /**\n   * Handle input.onKeyDown event\n   * Just to manage the selected item on the autocomplete if opened\n   *\n   * @param {KeyboardEvent<HTMLDivElement>} event\n   * @returns {void}\n   */\n  function onKeyDown(event: KeyboardEvent<HTMLDivElement>): void {\n    const {\n      opened,\n      results,\n      index,\n      selectItem,\n      closeAutocomplete,\n    } = ref.current;\n\n    if (!opened || !results.length) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case 40: // down\n        event.preventDefault();\n        updateState({\n          index: Math.min(index + 1, results.length - 1),\n        });\n        break;\n\n      case 38: // up\n        event.preventDefault();\n        updateState({\n          index: Math.max(index - 1, 0),\n        });\n        break;\n\n      case 9: // tab\n      case 13: // enter\n        if (results[index]) {\n          event.preventDefault();\n          selectItem(results[index]);\n        }\n        break;\n\n      case 27: // escape\n        closeAutocomplete();\n        break;\n    }\n  }\n\n  /**\n   * Public method to close the autocomplete\n   *\n   * @returns {void}\n   */\n  function closeAutocomplete(): void {\n    updateState({\n      opened: null,\n      loading: false,\n      results: [],\n      index: 0,\n      activeSearch: '',\n    });\n  }\n\n  /*\n  function getCaretCoordinates() {\n    let x = 0,\n      y = 0;\n    const isSupported = typeof window.getSelection !== \"undefined\";\n    if (isSupported) {\n      const selection = window.getSelection();\n      if (selection && selection.rangeCount !== 0) {\n        const range = selection.getRangeAt(0).cloneRange();\n        range.collapse(true);\n        const rect = range.getClientRects()[0];\n        if (rect) {\n          x = rect.left;\n          y = rect.top;\n        }\n      }\n    }\n    return { x, y };\n  }\n\n  */\n\n  /**\n   * Public method to open the autocomplete\n   *\n   * @param {HTMLElement} node Selected fragment where to open the autocomplete (for position)\n   * @param {string} text The fragment text we are autocompleting for\n   * @param {TMentionConfig} config The config object linked to the mention\n   * @returns {void}\n   */\n  function openAutocomplete<T>(\n    node: HTMLElement,\n    text: string,\n    config: TMentionConfig<T>\n  ): void {\n    //const fixed = ref.current.fixed;\n    //const rect = { top: 0, right: 0, bottom: 0, left: 0 };\n    let nodeRect = node.getBoundingClientRect();\n    let parentRect = { top: 0, right: 0, bottom: 0, left: 0 }; //node.getBoundingClientRect();\n    //const rects = node.getClientRects();\n\n    if (ref.current.inputElement) {\n      parentRect = ref.current.inputElement.getBoundingClientRect();\n    }\n\n    //const caretPos = getCaretCoordinates();\n    const x = nodeRect.right - parentRect.left;\n    const y = nodeRect.bottom - parentRect.top;\n    /*rect.top = nodeRect.top;\n    rect.right = nodeRect.right;\n    rect.bottom = nodeRect.bottom;\n    rect.left = nodeRect.left;\n\n    // Substract based on relative parent if not position:fixed\n    if (!fixed && node.offsetParent) {\n      const parentRect = node.offsetParent.getBoundingClientRect();\n      rect.top -= parentRect.top;\n      rect.right = rect.right - parentRect.right + parentRect.width;\n      rect.left -= parentRect.left;\n      rect.bottom = rect.bottom - parentRect.bottom + parentRect.height;\n    }\n\n    // TODO ELEMENT_WIDTH and ELEMENT_HEIGHT from Input Autocomplete element\n    const ELEMENT_WIDTH = 200;\n    const ELEMENT_HEIGHT = 300;\n\n    // TODO calculate overflow\n    const overflowX = nodeRect.left + 10 + ELEMENT_WIDTH - window.innerWidth;\n    const overflowY = nodeRect.bottom + ELEMENT_HEIGHT - window.innerHeight;\n\n    const x = 200; //overflowX > 0 ? rect.right + 15 : rect.left - 3;\n    const y = 10;//overflowY > 0 ? rect.top - 3 : rect.bottom + 3;\n    */\n\n    updateState({\n      loading: true,\n      index: 0,\n      opened: {\n        config,\n        fixed: true,\n        bottom: true,\n        right: true,\n        element: node,\n        x,\n        y,\n      },\n      activeSearch: text,\n    });\n\n    const onResolve = (results: TMentionItem[] = []) => {\n      if (ref.current.opened?.element === node) {\n        updateState({\n          results,\n          loading: false,\n        });\n      }\n    };\n\n    const p = config.onMention(text, onResolve);\n    if (p instanceof Promise) {\n      p.then(onResolve, onResolve);\n    } else if (p instanceof Array) {\n      onResolve(p);\n    }\n  }\n\n  /**\n   * Just set the active item in the autocomplete based on the index.\n   * Will work only if autocomplete is already opened\n   *\n   * @param {number} index The active element in autocomplete to hover\n   * @returns {void}\n   */\n  function setActiveItemIndex(index: number): void {\n    updateState({ index });\n  }\n\n  /**\n   * Transform input html content to usable text by transforming the\n   * fragments to valid text and erasing all invalid fragments.\n   *\n   * @returns {string}\n   */\n  function getTransformedValue(): string {\n    return getTransformedValueUtils(ref.current.inputElement);\n  }\n\n  /**\n   * Helper to be able to insert a fragment \"<@test|U211212>\" inside the text\n   *\n   * @param {string} code The code to insert as fragment (preprocess by configs). Ex: \"<@test|U211212>\"\n   * @param {HTMLElement?} element (optional) the html element to insert\n   * @returns {void}\n   */\n  function insertFragment(\n    code: string,\n    element: HTMLElement | null = null\n  ): void {\n    insertFragmentUtils<T>(code, element, configs, ref.current.inputElement);\n  }\n\n  /**\n   * Helper to be able to change the input content externaly\n   *\n   * @param {string} text The text to insert\n   * @returns {void}\n   */\n  function setValue(text: string): void {\n    const { inputElement, closeAutocomplete } = ref.current;\n\n    if (inputElement) {\n      inputElement.innerHTML = getInitialHTML(text);\n      removeBrokenFragments(inputElement, configs);\n    }\n\n    closeAutocomplete();\n  }\n\n  return (\n    <RichMentionsContext.Provider value={__ctx__}>\n      {children}\n    </RichMentionsContext.Provider>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { RichMentionsContext, TMentionItem } from './RichMentionsContext';\n\ninterface TProps {\n  fixed?: boolean;\n  className: string;\n  selectedItemClassName: string;\n  itemClassName: string;\n}\n\nexport function RichMentionsAutocomplete<T = object>({\n  fixed = true,\n  className,\n  itemClassName,\n  selectedItemClassName,\n}: TProps) {\n  const {\n    opened,\n    index,\n    //loading,\n    results,\n    setActiveItemIndex,\n    selectItem,\n    setPositionFixed,\n  } = useContext(RichMentionsContext);\n\n  const onSelectItem = (item: TMentionItem<T>) => () => selectItem(item);\n  const onHoverItem = (index: number) => () => setActiveItemIndex(index);\n  const divAttributes =\n    process.env.NODE_ENV !== 'production' ? { 'data-cy': 'autocomplete' } : {};\n  const itemAttributes =\n    process.env.NODE_ENV !== 'production'\n      ? { 'data-cy': 'autocomplete_item' }\n      : {};\n\n  useEffect(() => {\n    setPositionFixed(fixed);\n  }, [fixed, setPositionFixed]);\n\n  return opened && results.length ? (\n    <div\n      {...divAttributes}\n      className={`${className}`}\n      style={{\n        position: fixed ? 'fixed' : 'absolute',\n        left: opened.x + 'px',\n        top: opened.y + 'px',\n      }}\n    >\n      <div\n        className=\"autocomplete-list\"\n        style={{\n          bottom: opened.bottom ? '0px' : 'auto',\n          right: opened.right ? '0px' : 'auto',\n        }}\n      >\n        {results.map((item, i) => (\n          <button\n            className={`${itemClassName} ${\n              i === index ? selectedItemClassName : ''\n            }`}\n            type=\"button\"\n            key={item.ref}\n            onClick={onSelectItem(item)}\n            onMouseOver={onHoverItem(index)}\n            {...itemAttributes}\n          >\n            {item.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  ) : null;\n}\n"],"names":["noop","initialContext","getTransformedValue","insertFragment","setValue","activeSearch","inputElement","setInputElement","selectItem","setActiveItemIndex","opened","index","loading","results","closeAutocomplete","openAutocomplete","onBeforeChanges","onKeyDown","onChanges","fixed","setPositionFixed","RichMentionsContext","createContext","RichMentionsInput","defaultValue","singleLine","onEnter","divAttributes","ref","useRef","useContext","getInitialHTML","current","mergeOnKeyDown","event","key","setTimeout","preventDefault","onInput","onBeforeInput","style","outline","whiteSpace","overflow","React","contentEditable","dangerouslySetInnerHTML","__html","nodeToHtmlElement","node","nodeType","Node","TEXT_NODE","parentElement","getFragment","element","hasAttribute","setCursorPosition","position","selection","document","getSelection","range","createRange","setStart","collapse","removeAllRanges","addRange","escapeFragmentWithValue","text","textNode","createTextNode","replace","parent","insertBefore","nextSibling","length","fixCursorInsertion","defaultPrevented","insertion","data","container","currentTarget","i","rangeCount","getRangeAt","startContainer","endContainer","contains","Text","startOffset","previousChild","previousSibling","previousElement","previousElementSibling","appendChild","endOffset","isFinal","textContent","deleteSelection","deleted","lastDeletedRange","deleteContents","insertNode","transformFinalFragment","span","config","content","match","matchDisplay","setAttribute","customizeFragment","innerHTML","removeBrokenFragments","configs","Array","from","children","forEach","fixBrokenElement","HTMLBRElement","div","createElement","HTMLDivElement","attributes","removeChild","getAttribute","isValid","some","cfg","query","isSpace","char","test","needSpaceBefore","offset","charAt","includes","nodeName","prevText","needSpaceAfter","nextText","customFragment","find","insertAfterNode","insertBeforeNode","addSpaceBefore","addSpaceAfter","anchorNode","anchorOffset","fragment","firstPart","substr","secondPart","subFragment","childNodes","firstElementChild","space","brCharacter","Date","now","brMatcher","RegExp","map","el","getNodeContent","join","trim","Element","richValue","result","handleFragmentEscape","newText","matches","input","handleFragmentCreation","ctx","fragmentText","textBeforeQuery","textQuery","afterInsertion","after","isContainer","removeIfFinalFragment","handleFragmentDeletion","replaceSpacesWithInsecableSpaces","recursiveSpaceReplacer","nodeValue","HTMLElement","getConfigsInitialValue","formattedTextWithHtml","reduce","acc","$0","outerHTML","RichMentionsProvider","getContext","onUpdate","useState","__ctx__","setState","updateState","useEffect","addEventListener","onSelectionChange","removeEventListener","item","shouldOpened","keyCode","Math","min","max","nodeRect","getBoundingClientRect","parentRect","top","right","bottom","left","x","y","onResolve","p","onMention","Promise","then","getTransformedValueUtils","code","insertFragmentUtils","Provider","value","RichMentionsAutocomplete","className","itemClassName","selectedItemClassName","onSelectItem","onHoverItem","process","itemAttributes","type","onClick","onMouseOver","name"],"mappings":"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"}